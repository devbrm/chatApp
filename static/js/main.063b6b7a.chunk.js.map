{"version":3,"sources":["library/firebase.js","components/Chatroom.js","components/ChatRooms.js","components/Message.js","library/validInput.js","components/Messages.js","components/Chat.js","components/WelcomePage.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseDB","database","Chatroom","props","room","useContext","ChatContext","setRoom","setMenuClicked","name","onClick","e","target","chatRoomsRef","ref","ChatRooms","useState","roomName","setRoomName","chatRooms","setChatRooms","useEffect","isMounted","on","snap","data","val","keys","Object","className","href","rel","map","key","placeholder","type","onChange","value","preventDefault","Message","currentTime","item","userName","Timestamp","firestore","timeStamp","seconds","nanoseconds","toDate","id","data-is-big","message","length","data-username","toLocaleTimeString","toLocaleDateString","validInput","maxLength","trim","Messages","setMessage","setData","AppContext","messagesRef","useRef","roomRef","current","lastChild","scrollIntoView","onKeyDown","push","now","handleNewMessage","React","createContext","Chat","menuClicked","RenderRooms","Provider","prev","WelcomePage","setUserName","currentName","setCurrentName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.063b6b7a.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDq9WMfI3E8u9FuP4PI0666wWE61kl-lUY\",\r\n  authDomain: \"chat-app-5a6d2.firebaseapp.com\",\r\n  databaseURL: \"https://chat-app-5a6d2.firebaseio.com\",\r\n  projectId: \"chat-app-5a6d2\",\r\n  storageBucket: \"chat-app-5a6d2.appspot.com\",\r\n  messagingSenderId: \"441381505245\",\r\n  appId: \"1:441381505245:web:6bef42ec64d28e21103334\",\r\n  measurementId: \"G-8B6F6ESB79\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseDB = firebase.database();\r\n\r\nexport default firebase;\r\n","import React, { useContext } from \"react\";\r\nimport { ChatContext } from \"./Chat\";\r\n\r\nfunction Chatroom(props) {\r\n  const { room } = props;\r\n  const { setRoom, setMenuClicked } = useContext(ChatContext);\r\n\r\n  const handleClick = (e) => {\r\n    const { name } = e.target;\r\n    setRoom(name);\r\n    setMenuClicked(false);\r\n  };\r\n\r\n  return (\r\n    <button name={room} onClick={handleClick}>\r\n      {room}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default Chatroom;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { firebaseDB } from \"../library/firebase\";\r\nimport { ChatContext } from \"./Chat\";\r\nimport Chatroom from \"./Chatroom\";\r\nconst chatRoomsRef = firebaseDB.ref(\"chat-rooms\");\r\n\r\nfunction ChatRooms() {\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [chatRooms, setChatRooms] = useState([]);\r\n  const { setRoom, setMenuClicked } = useContext(ChatContext);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    chatRoomsRef.on(\"value\", (snap) => {\r\n      const data = snap.val();\r\n      if (!data) {\r\n        if (isMounted) setChatRooms([]);\r\n        return;\r\n      }\r\n      const keys = Object.keys(data);\r\n      if (isMounted) setChatRooms(keys);\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setRoomName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!!!roomName) return;\r\n\r\n    setRoom(roomName);\r\n    setMenuClicked(false);\r\n    setRoomName(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatRoomsContainer\">\r\n      <a\r\n        href=\"https://devbrm.github.io/portfolio/\"\r\n        rel=\"noopener noreferrer\"\r\n        target=\"_blank\"\r\n      >\r\n        Visit Developer's site\r\n      </a>\r\n      <h1>Select any Chat room</h1>\r\n      <div className=\"chatRooms\">\r\n        {chatRooms.map((room) => (\r\n          <Chatroom key={room} room={room} />\r\n        ))}\r\n      </div>\r\n      <div>or</div>\r\n      <form>\r\n        <input\r\n          placeholder=\"Room Name\"\r\n          type=\"text\"\r\n          onChange={handleChange}\r\n          value={roomName}\r\n        ></input>\r\n        <button type=\"submit\" onClick={handleSubmit}>\r\n          Create Room\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatRooms;\r\n","import React from \"react\";\r\nimport firebase from \"../library/firebase\";\r\n\r\nfunction Message(props) {\r\n  const { item, userName } = props;\r\n  const { Timestamp } = firebase.firestore;\r\n  let currentTime;\r\n\r\n  if (!item.timeStamp) currentTime = false;\r\n  else {\r\n    currentTime = new Timestamp(\r\n      item.timeStamp.seconds,\r\n      item.timeStamp.nanoseconds\r\n    ).toDate();\r\n  }\r\n\r\n  return (\r\n    <div className={item.userName === userName ? \"userMessages\" : \"\"}>\r\n      {item.userName}\r\n      <p\r\n        id={item.key}\r\n        data-is-big={item.message.length > 100 ? true : false}\r\n        data-username={item.userName}\r\n      >\r\n        {item.message}\r\n      </p>\r\n      <div className=\"timeStamp\">\r\n        {currentTime\r\n          ? currentTime.toLocaleTimeString() +\r\n            \"  \" +\r\n            currentTime.toLocaleDateString()\r\n          : \"no date\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","const validInput = (data, maxLength = 0) => {\r\n  if (data.length === 0) return true;\r\n  if (data.trim().length) {\r\n    if (maxLength) return data.length <= maxLength;\r\n    else return data.trim().length;\r\n  }\r\n};\r\n\r\nexport default validInput;\r\n","import React, { useEffect, useState, useContext, useRef } from \"react\";\r\nimport firebase, { firebaseDB } from \"../library/firebase\";\r\nimport { AppContext } from \"../App\";\r\nimport Message from \"./Message\";\r\nimport validInput from \"../library/validInput\";\r\n\r\nfunction Messages(props) {\r\n  const [message, setMessage] = useState(\"\");\r\n  const [data, setData] = useState([]);\r\n  const { userName } = useContext(AppContext);\r\n  const { room } = props;\r\n  const { Timestamp } = firebase.firestore;\r\n  const messagesRef = useRef(null);\r\n  const roomRef = firebaseDB.ref(\"chat-rooms/\" + room);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    roomRef.on(\"value\", (snap) => {\r\n      const data = snap.val();\r\n      if (!data) {\r\n        if (isMounted) setData([]);\r\n        return;\r\n      }\r\n\r\n      const keys = Object.keys(data);\r\n\r\n      if (isMounted)\r\n        setData(\r\n          keys.map((key) => {\r\n            return {\r\n              key,\r\n              ...data[key],\r\n            };\r\n          })\r\n        );\r\n    });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [room]);\r\n\r\n  useEffect(() => {\r\n    if (messagesRef.current.lastChild)\r\n      messagesRef.current.lastChild.scrollIntoView();\r\n  }, [data]);\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    setMessage(value);\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key !== \"Enter\" || !validInput(message) || !message.length) return;\r\n\r\n    e.preventDefault();\r\n    roomRef.push({\r\n      message: message.trim(),\r\n      userName,\r\n      timeStamp: Timestamp.now(),\r\n    });\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const handleNewMessage = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validInput(message) || !message.length) return;\r\n\r\n    roomRef.push({\r\n      message: message.trim(),\r\n      userName,\r\n      timeStamp: Timestamp.now(),\r\n    });\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"messagesContainer\">\r\n      <div ref={messagesRef} className=\"messages\">\r\n        {data.map((item) => (\r\n          <Message item={item} userName={userName} key={item[\"key\"]} />\r\n        ))}\r\n      </div>\r\n      <form>\r\n        <input\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          type=\"text\"\r\n          value={message}\r\n          placeholder=\"Aa\"\r\n        ></input>\r\n        <button\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            handleNewMessage(e);\r\n          }}\r\n        >\r\n          <i className=\"fas fa-2x fa-paper-plane\"></i>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","import React, { useState } from \"react\";\r\nimport ChatRooms from \"./ChatRooms\";\r\nimport Messages from \"./Messages\";\r\nexport const ChatContext = React.createContext();\r\n\r\nfunction Chat() {\r\n  const [menuClicked, setMenuClicked] = useState(false);\r\n  const [room, setRoom] = useState(\"\");\r\n\r\n  const RenderRooms = () => (\r\n    <>\r\n      <ChatContext.Provider value={{ setRoom, setMenuClicked }}>\r\n        <ChatRooms />\r\n      </ChatContext.Provider>\r\n    </>\r\n  );\r\n\r\n  //toggele the state for the menuclicked\r\n  const handleMenuClick = (e) => setMenuClicked((prev) => !prev);\r\n\r\n  // if no rooms or the menu is clicked then render the <RenderRooms /> component\r\n  if (!room || menuClicked) return <RenderRooms />;\r\n\r\n  return (\r\n    <div className=\"chatContainer\">\r\n      <div className=\"hamMenu\" onClick={handleMenuClick}>\r\n        <div></div>\r\n      </div>\r\n      <Messages room={room} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../App\";\r\nimport validInput from \"../library/validInput\";\r\n\r\nfunction WelcomePage() {\r\n  const { setUserName } = useContext(AppContext);\r\n  const [currentName, setCurrentName] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n\r\n    if (!validInput(value, 12)) return;\r\n    setCurrentName(value);\r\n  };\r\n\r\n  const handleClick = (e) => {\r\n    setUserName(currentName);\r\n  };\r\n\r\n  return (\r\n    <div className=\"welcomePage\">\r\n      <h1>Welcome to the chat App</h1>\r\n      <p>Enter your name and lets have fun together</p>\r\n      <form>\r\n        <input\r\n          type=\"text\"\r\n          value={currentName}\r\n          placeholder=\"Name (max 12 characters)\"\r\n          onChange={handleChange}\r\n        ></input>\r\n        <button type=\"submit\" onClick={handleClick}>\r\n          Lets Go\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomePage;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chat from \"./components/Chat\";\nimport WelcomePage from \"./components/WelcomePage\";\nexport const AppContext = React.createContext();\n\nfunction App() {\n  const [userName, setUserName] = useState(\"\");\n\n  if (!userName)\n    return (\n      <AppContext.Provider value={{ userName, setUserName }}>\n        <WelcomePage />\n      </AppContext.Provider>\n    );\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={{ userName, setUserName }}>\n        <Chat />\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}